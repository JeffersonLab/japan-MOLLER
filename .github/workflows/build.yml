name: linux-eic-shell

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  merge_group:
  workflow_dispatch: # allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - LCG: "LCG_105/x86_64-ubuntu2204-gcc11-opt"
            CC: gcc
            CXX: g++
          - LCG: "dev3/x86_64-el9-clang16-opt"
            CC: clang
            CXX: clang++
    env:
      PREFIX: ${{ github.workspace }}/install
    steps:
    - uses: actions/checkout@v4
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      run: |
        echo "timestamp=$(date --iso-8601=minutes)" >> $GITHUB_OUTPUT
    - name: Retrieve ccache cache files
      uses: actions/cache@v4
      with:
        path: .ccache
        key: ccache-${{ matrix.CC }}-${{ github.ref_name }}-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
             ccache-${{ matrix.CC }}-${{ github.ref_name }}-
             ccache-${{ matrix.CC }}-
             ccache-
    - name: Configure ccache
      run: |
        mkdir -p ~/.ccache/
        echo "cache_dir=${{ github.workspace }}/.ccache" >> ~/.ccache/ccache.conf
        echo "max_size=500MB" >> ~/.ccache/ccache.conf
        echo "compression=true" >> ~/.ccache/ccache.conf
    - uses: cvmfs-contrib/github-action-cvmfs@v4
    - uses: aidasoft/run-lcg-view@v3
      with:
        release-platform: ${{ matrix.LCG }}
        run: |
          export CC=${{ matrix.CC }} CXX=${{ matrix.CXX }}
          cmake -B build -S . -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          cmake --build build -- -k -j $(getconf _NPROCESSORS_ONLN) install
    - uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.CC }}
        path: install/
        if-no-files-found: error
